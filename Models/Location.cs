using GeoBuyerParser2.Services;
using OsmSharp;

namespace GeoBuyerParser2.Models;

public enum LocationCategory
{
    Shop,
    Supermarket,
    Clothes,
    CarRepair,
    Hairdresser,
    Bakery,
    Beauty,
    Florist,
    Chemist,
    Butcher,
    Furniture,
    DoItYourself,
    Car,
    Electronics,
    Shoes,
    Alcohol,
    MobilePhone,
    CarParts,
    Optician,
    Jewelry,
    Mall,
    Pastry,
    Books,
    Bicycle,
    Pet,
    Hardware,
    VarietyStore,
    Kiosk,
    Sports,
    Computer,
    GardenCentre,
    Greengrocer,
    TravelAgency,
    Wholesale,
    Newsagent,
    Trade,
    Stationery,
    Cosmetics,
    Toys,
    Confectionery,
    Tyres,
    Copyshop,
    FuneralDirectors,
    Pawnbroker,
    Gift,
    Ticket,
    MedicalSupply,
    ECigarette,
    InteriorDecoration,
    Lottery,
    Houseware,
    Tailor,
    Photo,
    Paint,
    Seafood,
    Deli,
    Bookmaker,
    DepartmentStore,
    Agrarian,
    Wine,
    DryCleaning,
    Tobacco,
    Laundry,
    Motorcycle,
    Electrical,
    PetGrooming,
    Boutique,
    Curtain,
    HearingAids,
    BabyGoods,
    Art,
    General,
    Herbalist,
    Massage,
    Outdoor,
    Fabric,
    BathroomFurnishing,
    Kitchen,
    MoneyLender,
    SecondHand,
    Perfumery,
    Doors,
    Fishing,
    Watches,
    Bed,
    Locksmith,
    Radiotechnics,
    Tea,
    Appliance,
    Sewing,
    HealthFood,
    NutritionSupplements,
    Telecommunication,
    Antiques,
    Bag,
    Coffee,
    Lighting,
    Hifi,
    Carpet,
    WindowBlind,
    Leather,
    MusicalInstrument,
    Erotic,
    Farm,
    Beverages,
    Weapons,
    Glaziery,
    Religion,
    IceCream,
    Music,
    Craft,
    Flooring,
    Party,
    HairdresserSupply,
    FashionAccessories,
    Cannabis,
    Gas,
    StorageRental,
    Dairy,
    Frame,
    Fireplace,
    Cheese,
    VideoGames,
    Games,
    Outpost,
    Fuel,
    Pottery,
    Collector,
    Security,
    Tiles,
    Vacant,
    Charity,
    Candles,
    Chocolate,
    Hunting,
    ScubaDiving,
    Video,
    VacuumCleaner,
    HouseholdLinen,
    FrozenFood,
    Model,
    MilitarySurplus,
    Spices,
    Pyrotechnics,
    Insurance,
    Anime,
    SwimmingPool,
    Boat,
    Camera,
    Energy,
    Trophy,
    Water,
    Ski,
    Groundskeeping,
    Windows,
    Caravan,
    GardenFurniture,
    PestControl,
    Wool,
    Surf,
    ATV,
    Trailer,
}

public record Location(
    string id,
    string? ObjectID = null,
    string? Name = null,
    double? Latitude = null,
    double? Longitude = null,
    string? OpeningHours = null,
    string? Email = null,
    string? ContactEmail = null,
    string? Phone = null,
    string? ContactPhone = null,
    string? Mobile = null,
    string? ContactMobile = null,
    string? Website = null,
    string? ContactWebsite = null,
    string? AddressStreet = null,
    string? AddressHouseNumber = null,
    string? AddressPostcode = null,
    string? AddressCity = null,
    string? Shop = null,
    string? Category = null)
{
    public static Location FromOsmGeo(OsmGeo osmGeo)
    {
        Location location = new Location(Guid.NewGuid().ToString());

        if (osmGeo is OsmSharp.Node node)
        {
            location = location with { Latitude = node.Latitude, Longitude = node.Longitude };
        }

        foreach (var tag in osmGeo.Tags)
        {
            location = ProcessLocationTag(location, tag.Key, tag.Value);
        }

        return location;
    }

    public static Location FromOsmElement(OsmElement osmElement)
    {
        Location location = new Location(Guid.NewGuid().ToString())
        {
            Latitude = osmElement.lat,
            Longitude = osmElement.lon
        };

        foreach (var tag in osmElement.tags)
        {
            location = ProcessLocationTag(location, tag.Key, tag.Value);
        }

        return location;
    }

    private static Location ProcessLocationTag(Location location, string key, string value)
    {
        // Similar tag processing logic as in FromOsmGeo
        // Add or modify tag mappings as needed
        return key switch
        {
            "object_id" => location with { ObjectID = value },
            "name" => location with { Name = value },
            "opening_hours" => location with { OpeningHours = value },
            "email" => location with { Email = value },
            "contact:email" => location with { ContactEmail = value },
            "phone" => location with { Phone = value },
            "contact:phone" => location with { ContactPhone = value },
            "mobile" => location with { Mobile = value },
            "contact:mobile" => location with { ContactMobile = value },
            "website" => location with { Website = value },
            "contact:website" => location with { ContactWebsite = value },
            "addr:street" => location with { AddressStreet = value },
            "addr:housenumber" => location with { AddressHouseNumber = value },
            "addr:postcode" => location with { AddressPostcode = value },
            "addr:city" => location with { AddressCity = value },
            "shop" => value.ToLower() switch
            {
                "supermarket" => location with { Category = Enum.GetName(LocationCategory.Supermarket) },
                "clothes" => location with { Category = Enum.GetName(LocationCategory.Clothes) },
                "car_repair" => location with { Category = Enum.GetName(LocationCategory.CarRepair) },
                "hairdresser" => location with { Category = Enum.GetName(LocationCategory.Hairdresser) },
                "bakery" => location with { Category = Enum.GetName(LocationCategory.Bakery) },
                "beauty" => location with { Category = Enum.GetName(LocationCategory.Beauty) },
                "florist" => location with { Category = Enum.GetName(LocationCategory.Florist) },
                "chemist" => location with { Category = Enum.GetName(LocationCategory.Chemist) },
                "butcher" => location with { Category = Enum.GetName(LocationCategory.Butcher) },
                "furniture" => location with { Category = Enum.GetName(LocationCategory.Furniture) },
                "doityourself" => location with { Category = Enum.GetName(LocationCategory.DoItYourself) },
                "car" => location with { Category = Enum.GetName(LocationCategory.Car) },
                "electronics" => location with { Category = Enum.GetName(LocationCategory.Electronics) },
                "shoes" => location with { Category = Enum.GetName(LocationCategory.Shoes) },
                "alcohol" => location with { Category = Enum.GetName(LocationCategory.Alcohol) },
                "mobilephone" => location with { Category = Enum.GetName(LocationCategory.MobilePhone) },
                "carparts" => location with { Category = Enum.GetName(LocationCategory.CarParts) },
                "optician" => location with { Category = Enum.GetName(LocationCategory.Optician) },
                "jewelry" => location with { Category = Enum.GetName(LocationCategory.Jewelry) },
                "mall" => location with { Category = Enum.GetName(LocationCategory.Mall) },
                "pastry" => location with { Category = Enum.GetName(LocationCategory.Pastry) },
                "books" => location with { Category = Enum.GetName(LocationCategory.Books) },
                "bicycle" => location with { Category = Enum.GetName(LocationCategory.Bicycle) },
                "pet" => location with { Category = Enum.GetName(LocationCategory.Pet) },
                "hardware" => location with { Category = Enum.GetName(LocationCategory.Hardware) },
                "varietystore" => location with { Category = Enum.GetName(LocationCategory.VarietyStore) },
                "kiosk" => location with { Category = Enum.GetName(LocationCategory.Kiosk) },
                "sports" => location with { Category = Enum.GetName(LocationCategory.Sports) },
                "computer" => location with { Category = Enum.GetName(LocationCategory.Computer) },
                "gardencentre" => location with { Category = Enum.GetName(LocationCategory.GardenCentre) },
                "greengrocer" => location with { Category = Enum.GetName(LocationCategory.Greengrocer) },
                "travelagency" => location with { Category = Enum.GetName(LocationCategory.TravelAgency) },
                "wholesale" => location with { Category = Enum.GetName(LocationCategory.Wholesale) },
                "newsagent" => location with { Category = Enum.GetName(LocationCategory.Newsagent) },
                "trade" => location with { Category = Enum.GetName(LocationCategory.Trade) },
                "stationery" => location with { Category = Enum.GetName(LocationCategory.Stationery) },
                "cosmetics" => location with { Category = Enum.GetName(LocationCategory.Cosmetics) },
                "toys" => location with { Category = Enum.GetName(LocationCategory.Toys) },
                "confectionery" => location with { Category = Enum.GetName(LocationCategory.Confectionery) },
                "tyres" => location with { Category = Enum.GetName(LocationCategory.Tyres) },
                "copyshop" => location with { Category = Enum.GetName(LocationCategory.Copyshop) },
                "funeraldirectors" => location with { Category = Enum.GetName(LocationCategory.FuneralDirectors) },
                "pawnbroker" => location with { Category = Enum.GetName(LocationCategory.Pawnbroker) },
                "gift" => location with { Category = Enum.GetName(LocationCategory.Gift) },
                "ticket" => location with { Category = Enum.GetName(LocationCategory.Ticket) },
                "medicalsupply" => location with { Category = Enum.GetName(LocationCategory.MedicalSupply) },
                "ecigarette" => location with { Category = Enum.GetName(LocationCategory.ECigarette) },
                "interiordecoration" => location with { Category = Enum.GetName(LocationCategory.InteriorDecoration) },
                "lottery" => location with { Category = Enum.GetName(LocationCategory.Lottery) },
                "houseware" => location with { Category = Enum.GetName(LocationCategory.Houseware) },
                "tailor" => location with { Category = Enum.GetName(LocationCategory.Tailor) },
                "photo" => location with { Category = Enum.GetName(LocationCategory.Photo) },
                "paint" => location with { Category = Enum.GetName(LocationCategory.Paint) },
                "seafood" => location with { Category = Enum.GetName(LocationCategory.Seafood) },
                "deli" => location with { Category = Enum.GetName(LocationCategory.Deli) },
                "bookmaker" => location with { Category = Enum.GetName(LocationCategory.Bookmaker) },
                "departmentstore" => location with { Category = Enum.GetName(LocationCategory.DepartmentStore) },
                "agrarian" => location with { Category = Enum.GetName(LocationCategory.Agrarian) },
                "wine" => location with { Category = Enum.GetName(LocationCategory.Wine) },
                "drycleaning" => location with { Category = Enum.GetName(LocationCategory.DryCleaning) },
                "tobacco" => location with { Category = Enum.GetName(LocationCategory.Tobacco) },
                "laundry" => location with { Category = Enum.GetName(LocationCategory.Laundry) },
                "motorcycle" => location with { Category = Enum.GetName(LocationCategory.Motorcycle) },
                "electrical" => location with { Category = Enum.GetName(LocationCategory.Electrical) },
                "petgrooming" => location with { Category = Enum.GetName(LocationCategory.PetGrooming) },
                "boutique" => location with { Category = Enum.GetName(LocationCategory.Boutique) },
                "curtain" => location with { Category = Enum.GetName(LocationCategory.Curtain) },
                "hearingaids" => location with { Category = Enum.GetName(LocationCategory.HearingAids) },
                "babygoods" => location with { Category = Enum.GetName(LocationCategory.BabyGoods) },
                "art" => location with { Category = Enum.GetName(LocationCategory.Art) },
                "general" => location with { Category = Enum.GetName(LocationCategory.General) },
                "herbalist" => location with { Category = Enum.GetName(LocationCategory.Herbalist) },
                "massage" => location with { Category = Enum.GetName(LocationCategory.Massage) },
                "outdoor" => location with { Category = Enum.GetName(LocationCategory.Outdoor) },
                "fabric" => location with { Category = Enum.GetName(LocationCategory.Fabric) },
                "bathroomfurnishing" => location with { Category = Enum.GetName(LocationCategory.BathroomFurnishing) },
                "kitchen" => location with { Category = Enum.GetName(LocationCategory.Kitchen) },
                "moneylender" => location with { Category = Enum.GetName(LocationCategory.MoneyLender) },
                "secondhand" => location with { Category = Enum.GetName(LocationCategory.SecondHand) },
                "perfumery" => location with { Category = Enum.GetName(LocationCategory.Perfumery) },
                "doors" => location with { Category = Enum.GetName(LocationCategory.Doors) },
                "fishing" => location with { Category = Enum.GetName(LocationCategory.Fishing) },
                "watches" => location with { Category = Enum.GetName(LocationCategory.Watches) },
                "bed" => location with { Category = Enum.GetName(LocationCategory.Bed) },
                "locksmith" => location with { Category = Enum.GetName(LocationCategory.Locksmith) },
                "radiotechnics" => location with { Category = Enum.GetName(LocationCategory.Radiotechnics) },
                "tea" => location with { Category = Enum.GetName(LocationCategory.Tea) },
                "appliance" => location with { Category = Enum.GetName(LocationCategory.Appliance) },
                "sewing" => location with { Category = Enum.GetName(LocationCategory.Sewing) },
                "healthfood" => location with { Category = Enum.GetName(LocationCategory.HealthFood) },
                "nutritionsupplements" => location with { Category = Enum.GetName(LocationCategory.NutritionSupplements) },
                "telecommunication" => location with { Category = Enum.GetName(LocationCategory.Telecommunication) },
                "antiques" => location with { Category = Enum.GetName(LocationCategory.Antiques) },
                "bag" => location with { Category = Enum.GetName(LocationCategory.Bag) },
                "coffee" => location with { Category = Enum.GetName(LocationCategory.Coffee) },
                "lighting" => location with { Category = Enum.GetName(LocationCategory.Lighting) },
                "hifi" => location with { Category = Enum.GetName(LocationCategory.Hifi) },
                "carpet" => location with { Category = Enum.GetName(LocationCategory.Carpet) },
                "windowblind" => location with { Category = Enum.GetName(LocationCategory.WindowBlind) },
                "leather" => location with { Category = Enum.GetName(LocationCategory.Leather) },
                "musicalinstrument" => location with { Category = Enum.GetName(LocationCategory.MusicalInstrument) },
                "erotic" => location with { Category = Enum.GetName(LocationCategory.Erotic) },
                "farm" => location with { Category = Enum.GetName(LocationCategory.Farm) },
                "beverages" => location with { Category = Enum.GetName(LocationCategory.Beverages) },
                _ => location with { Category = null } // Default to "Shop"
            },
            _ => location
        };
    }
}
